// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufTest.proto

package com.dtflys.forest.test.converter.protobuf;

public final class ProtobufProto {
  private ProtobufProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code Color}
   */
  public enum Color
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>RED = 1;</code>
     */
    RED(1),
    /**
     * <code>GREEN = 2;</code>
     */
    GREEN(2),
    /**
     * <code>BLUE = 3;</code>
     */
    BLUE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>RED = 1;</code>
     */
    public static final int RED_VALUE = 1;
    /**
     * <code>GREEN = 2;</code>
     */
    public static final int GREEN_VALUE = 2;
    /**
     * <code>BLUE = 3;</code>
     */
    public static final int BLUE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static Color valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Color forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return RED;
        case 2: return GREEN;
        case 3: return BLUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Color>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Color> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Color>() {
            public Color findValueByNumber(int number) {
              return Color.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ProtobufProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Color[] VALUES = values();

    public static Color valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Color(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Color)
  }

  public interface BaseDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BaseData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double double_val = 1;</code>
     * @return The doubleVal.
     */
    double getDoubleVal();

    /**
     * <code>float float_val = 2;</code>
     * @return The floatVal.
     */
    float getFloatVal();

    /**
     * <code>int32 int32_val = 3;</code>
     * @return The int32Val.
     */
    int getInt32Val();

    /**
     * <code>int64 int64_val = 4;</code>
     * @return The int64Val.
     */
    long getInt64Val();

    /**
     * <code>uint32 uint32_val = 5;</code>
     * @return The uint32Val.
     */
    int getUint32Val();

    /**
     * <code>uint64 uint64_val = 6;</code>
     * @return The uint64Val.
     */
    long getUint64Val();

    /**
     * <code>sint32 sint32_val = 7;</code>
     * @return The sint32Val.
     */
    int getSint32Val();

    /**
     * <code>sint64 sint64_val = 8;</code>
     * @return The sint64Val.
     */
    long getSint64Val();

    /**
     * <code>fixed32 fixed32_val = 9;</code>
     * @return The fixed32Val.
     */
    int getFixed32Val();

    /**
     * <code>fixed64 fixed64_val = 10;</code>
     * @return The fixed64Val.
     */
    long getFixed64Val();

    /**
     * <code>sfixed32 sfixed32_val = 11;</code>
     * @return The sfixed32Val.
     */
    int getSfixed32Val();

    /**
     * <code>sfixed64 sfixed64_val = 12;</code>
     * @return The sfixed64Val.
     */
    long getSfixed64Val();

    /**
     * <code>bool bool_val = 13;</code>
     * @return The boolVal.
     */
    boolean getBoolVal();

    /**
     * <code>string string_val = 14;</code>
     * @return The stringVal.
     */
    String getStringVal();
    /**
     * <code>string string_val = 14;</code>
     * @return The bytes for stringVal.
     */
    com.google.protobuf.ByteString
        getStringValBytes();

    /**
     * <code>bytes bytes_val = 15;</code>
     * @return The bytesVal.
     */
    com.google.protobuf.ByteString getBytesVal();

    /**
     * <code>.Color enum_val = 16;</code>
     * @return The enum numeric value on the wire for enumVal.
     */
    int getEnumValValue();
    /**
     * <code>.Color enum_val = 16;</code>
     * @return The enumVal.
     */
    Color getEnumVal();

    /**
     * <code>repeated string re_str_val = 17;</code>
     * @return A list containing the reStrVal.
     */
    java.util.List<String>
        getReStrValList();
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @return The count of reStrVal.
     */
    int getReStrValCount();
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @param index The index of the element to return.
     * @return The reStrVal at the given index.
     */
    String getReStrVal(int index);
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @param index The index of the value to return.
     * @return The bytes of the reStrVal at the given index.
     */
    com.google.protobuf.ByteString
        getReStrValBytes(int index);

    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    int getMapValCount();
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    boolean containsMapVal(
        String key);
    /**
     * Use {@link #getMapValMap()} instead.
     */
    @Deprecated
    java.util.Map<String, BaseData>
    getMapVal();
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    java.util.Map<String, BaseData>
    getMapValMap();
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */

    BaseData getMapValOrDefault(
        String key,
        BaseData defaultValue);
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */

    BaseData getMapValOrThrow(
        String key);
  }
  /**
   * Protobuf type {@code BaseData}
   */
  public static final class BaseData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BaseData)
      BaseDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BaseData.newBuilder() to construct.
    private BaseData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BaseData() {
      stringVal_ = "";
      bytesVal_ = com.google.protobuf.ByteString.EMPTY;
      enumVal_ = 0;
      reStrVal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new BaseData();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BaseData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              doubleVal_ = input.readDouble();
              break;
            }
            case 21: {

              floatVal_ = input.readFloat();
              break;
            }
            case 24: {

              int32Val_ = input.readInt32();
              break;
            }
            case 32: {

              int64Val_ = input.readInt64();
              break;
            }
            case 40: {

              uint32Val_ = input.readUInt32();
              break;
            }
            case 48: {

              uint64Val_ = input.readUInt64();
              break;
            }
            case 56: {

              sint32Val_ = input.readSInt32();
              break;
            }
            case 64: {

              sint64Val_ = input.readSInt64();
              break;
            }
            case 77: {

              fixed32Val_ = input.readFixed32();
              break;
            }
            case 81: {

              fixed64Val_ = input.readFixed64();
              break;
            }
            case 93: {

              sfixed32Val_ = input.readSFixed32();
              break;
            }
            case 97: {

              sfixed64Val_ = input.readSFixed64();
              break;
            }
            case 104: {

              boolVal_ = input.readBool();
              break;
            }
            case 114: {
              String s = input.readStringRequireUtf8();

              stringVal_ = s;
              break;
            }
            case 122: {

              bytesVal_ = input.readBytes();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();

              enumVal_ = rawValue;
              break;
            }
            case 138: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                reStrVal_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              reStrVal_.add(s);
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                mapVal_ = com.google.protobuf.MapField.newMapField(
                    MapValDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<String, BaseData>
              mapVal__ = input.readMessage(
                  MapValDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mapVal_.getMutableMap().put(
                  mapVal__.getKey(), mapVal__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          reStrVal_ = reStrVal_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ProtobufProto.internal_static_BaseData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 18:
          return internalGetMapVal();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ProtobufProto.internal_static_BaseData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BaseData.class, Builder.class);
    }

    public static final int DOUBLE_VAL_FIELD_NUMBER = 1;
    private double doubleVal_;
    /**
     * <code>double double_val = 1;</code>
     * @return The doubleVal.
     */
    @Override
    public double getDoubleVal() {
      return doubleVal_;
    }

    public static final int FLOAT_VAL_FIELD_NUMBER = 2;
    private float floatVal_;
    /**
     * <code>float float_val = 2;</code>
     * @return The floatVal.
     */
    @Override
    public float getFloatVal() {
      return floatVal_;
    }

    public static final int INT32_VAL_FIELD_NUMBER = 3;
    private int int32Val_;
    /**
     * <code>int32 int32_val = 3;</code>
     * @return The int32Val.
     */
    @Override
    public int getInt32Val() {
      return int32Val_;
    }

    public static final int INT64_VAL_FIELD_NUMBER = 4;
    private long int64Val_;
    /**
     * <code>int64 int64_val = 4;</code>
     * @return The int64Val.
     */
    @Override
    public long getInt64Val() {
      return int64Val_;
    }

    public static final int UINT32_VAL_FIELD_NUMBER = 5;
    private int uint32Val_;
    /**
     * <code>uint32 uint32_val = 5;</code>
     * @return The uint32Val.
     */
    @Override
    public int getUint32Val() {
      return uint32Val_;
    }

    public static final int UINT64_VAL_FIELD_NUMBER = 6;
    private long uint64Val_;
    /**
     * <code>uint64 uint64_val = 6;</code>
     * @return The uint64Val.
     */
    @Override
    public long getUint64Val() {
      return uint64Val_;
    }

    public static final int SINT32_VAL_FIELD_NUMBER = 7;
    private int sint32Val_;
    /**
     * <code>sint32 sint32_val = 7;</code>
     * @return The sint32Val.
     */
    @Override
    public int getSint32Val() {
      return sint32Val_;
    }

    public static final int SINT64_VAL_FIELD_NUMBER = 8;
    private long sint64Val_;
    /**
     * <code>sint64 sint64_val = 8;</code>
     * @return The sint64Val.
     */
    @Override
    public long getSint64Val() {
      return sint64Val_;
    }

    public static final int FIXED32_VAL_FIELD_NUMBER = 9;
    private int fixed32Val_;
    /**
     * <code>fixed32 fixed32_val = 9;</code>
     * @return The fixed32Val.
     */
    @Override
    public int getFixed32Val() {
      return fixed32Val_;
    }

    public static final int FIXED64_VAL_FIELD_NUMBER = 10;
    private long fixed64Val_;
    /**
     * <code>fixed64 fixed64_val = 10;</code>
     * @return The fixed64Val.
     */
    @Override
    public long getFixed64Val() {
      return fixed64Val_;
    }

    public static final int SFIXED32_VAL_FIELD_NUMBER = 11;
    private int sfixed32Val_;
    /**
     * <code>sfixed32 sfixed32_val = 11;</code>
     * @return The sfixed32Val.
     */
    @Override
    public int getSfixed32Val() {
      return sfixed32Val_;
    }

    public static final int SFIXED64_VAL_FIELD_NUMBER = 12;
    private long sfixed64Val_;
    /**
     * <code>sfixed64 sfixed64_val = 12;</code>
     * @return The sfixed64Val.
     */
    @Override
    public long getSfixed64Val() {
      return sfixed64Val_;
    }

    public static final int BOOL_VAL_FIELD_NUMBER = 13;
    private boolean boolVal_;
    /**
     * <code>bool bool_val = 13;</code>
     * @return The boolVal.
     */
    @Override
    public boolean getBoolVal() {
      return boolVal_;
    }

    public static final int STRING_VAL_FIELD_NUMBER = 14;
    private volatile Object stringVal_;
    /**
     * <code>string string_val = 14;</code>
     * @return The stringVal.
     */
    @Override
    public String getStringVal() {
      Object ref = stringVal_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        stringVal_ = s;
        return s;
      }
    }
    /**
     * <code>string string_val = 14;</code>
     * @return The bytes for stringVal.
     */
    @Override
    public com.google.protobuf.ByteString
        getStringValBytes() {
      Object ref = stringVal_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        stringVal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTES_VAL_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString bytesVal_;
    /**
     * <code>bytes bytes_val = 15;</code>
     * @return The bytesVal.
     */
    @Override
    public com.google.protobuf.ByteString getBytesVal() {
      return bytesVal_;
    }

    public static final int ENUM_VAL_FIELD_NUMBER = 16;
    private int enumVal_;
    /**
     * <code>.Color enum_val = 16;</code>
     * @return The enum numeric value on the wire for enumVal.
     */
    @Override public int getEnumValValue() {
      return enumVal_;
    }
    /**
     * <code>.Color enum_val = 16;</code>
     * @return The enumVal.
     */
    @Override public Color getEnumVal() {
      @SuppressWarnings("deprecation")
      Color result = Color.valueOf(enumVal_);
      return result == null ? Color.UNRECOGNIZED : result;
    }

    public static final int RE_STR_VAL_FIELD_NUMBER = 17;
    private com.google.protobuf.LazyStringList reStrVal_;
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @return A list containing the reStrVal.
     */
    public com.google.protobuf.ProtocolStringList
        getReStrValList() {
      return reStrVal_;
    }
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @return The count of reStrVal.
     */
    public int getReStrValCount() {
      return reStrVal_.size();
    }
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @param index The index of the element to return.
     * @return The reStrVal at the given index.
     */
    public String getReStrVal(int index) {
      return reStrVal_.get(index);
    }
    /**
     * <code>repeated string re_str_val = 17;</code>
     * @param index The index of the value to return.
     * @return The bytes of the reStrVal at the given index.
     */
    public com.google.protobuf.ByteString
        getReStrValBytes(int index) {
      return reStrVal_.getByteString(index);
    }

    public static final int MAP_VAL_FIELD_NUMBER = 18;
    private static final class MapValDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, BaseData> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, BaseData>newDefaultInstance(
                  ProtobufProto.internal_static_BaseData_MapValEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  BaseData.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        String, BaseData> mapVal_;
    private com.google.protobuf.MapField<String, BaseData>
    internalGetMapVal() {
      if (mapVal_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapValDefaultEntryHolder.defaultEntry);
      }
      return mapVal_;
    }

    public int getMapValCount() {
      return internalGetMapVal().getMap().size();
    }
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */

    @Override
    public boolean containsMapVal(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMapVal().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapValMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, BaseData> getMapVal() {
      return getMapValMap();
    }
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    @Override

    public java.util.Map<String, BaseData> getMapValMap() {
      return internalGetMapVal().getMap();
    }
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    @Override

    public BaseData getMapValOrDefault(
        String key,
        BaseData defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, BaseData> map =
          internalGetMapVal().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
     */
    @Override

    public BaseData getMapValOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, BaseData> map =
          internalGetMapVal().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (doubleVal_ != 0D) {
        output.writeDouble(1, doubleVal_);
      }
      if (floatVal_ != 0F) {
        output.writeFloat(2, floatVal_);
      }
      if (int32Val_ != 0) {
        output.writeInt32(3, int32Val_);
      }
      if (int64Val_ != 0L) {
        output.writeInt64(4, int64Val_);
      }
      if (uint32Val_ != 0) {
        output.writeUInt32(5, uint32Val_);
      }
      if (uint64Val_ != 0L) {
        output.writeUInt64(6, uint64Val_);
      }
      if (sint32Val_ != 0) {
        output.writeSInt32(7, sint32Val_);
      }
      if (sint64Val_ != 0L) {
        output.writeSInt64(8, sint64Val_);
      }
      if (fixed32Val_ != 0) {
        output.writeFixed32(9, fixed32Val_);
      }
      if (fixed64Val_ != 0L) {
        output.writeFixed64(10, fixed64Val_);
      }
      if (sfixed32Val_ != 0) {
        output.writeSFixed32(11, sfixed32Val_);
      }
      if (sfixed64Val_ != 0L) {
        output.writeSFixed64(12, sfixed64Val_);
      }
      if (boolVal_ != false) {
        output.writeBool(13, boolVal_);
      }
      if (!getStringValBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, stringVal_);
      }
      if (!bytesVal_.isEmpty()) {
        output.writeBytes(15, bytesVal_);
      }
      if (enumVal_ != Color.NONE.getNumber()) {
        output.writeEnum(16, enumVal_);
      }
      for (int i = 0; i < reStrVal_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 17, reStrVal_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMapVal(),
          MapValDefaultEntryHolder.defaultEntry,
          18);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doubleVal_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, doubleVal_);
      }
      if (floatVal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, floatVal_);
      }
      if (int32Val_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, int32Val_);
      }
      if (int64Val_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, int64Val_);
      }
      if (uint32Val_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, uint32Val_);
      }
      if (uint64Val_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uint64Val_);
      }
      if (sint32Val_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, sint32Val_);
      }
      if (sint64Val_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(8, sint64Val_);
      }
      if (fixed32Val_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, fixed32Val_);
      }
      if (fixed64Val_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, fixed64Val_);
      }
      if (sfixed32Val_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(11, sfixed32Val_);
      }
      if (sfixed64Val_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed64Size(12, sfixed64Val_);
      }
      if (boolVal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, boolVal_);
      }
      if (!getStringValBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, stringVal_);
      }
      if (!bytesVal_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, bytesVal_);
      }
      if (enumVal_ != Color.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, enumVal_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < reStrVal_.size(); i++) {
          dataSize += computeStringSizeNoTag(reStrVal_.getRaw(i));
        }
        size += dataSize;
        size += 2 * getReStrValList().size();
      }
      for (java.util.Map.Entry<String, BaseData> entry
           : internalGetMapVal().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, BaseData>
        mapVal__ = MapValDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, mapVal__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BaseData)) {
        return super.equals(obj);
      }
      BaseData other = (BaseData) obj;

      if (Double.doubleToLongBits(getDoubleVal())
          != Double.doubleToLongBits(
              other.getDoubleVal())) return false;
      if (Float.floatToIntBits(getFloatVal())
          != Float.floatToIntBits(
              other.getFloatVal())) return false;
      if (getInt32Val()
          != other.getInt32Val()) return false;
      if (getInt64Val()
          != other.getInt64Val()) return false;
      if (getUint32Val()
          != other.getUint32Val()) return false;
      if (getUint64Val()
          != other.getUint64Val()) return false;
      if (getSint32Val()
          != other.getSint32Val()) return false;
      if (getSint64Val()
          != other.getSint64Val()) return false;
      if (getFixed32Val()
          != other.getFixed32Val()) return false;
      if (getFixed64Val()
          != other.getFixed64Val()) return false;
      if (getSfixed32Val()
          != other.getSfixed32Val()) return false;
      if (getSfixed64Val()
          != other.getSfixed64Val()) return false;
      if (getBoolVal()
          != other.getBoolVal()) return false;
      if (!getStringVal()
          .equals(other.getStringVal())) return false;
      if (!getBytesVal()
          .equals(other.getBytesVal())) return false;
      if (enumVal_ != other.enumVal_) return false;
      if (!getReStrValList()
          .equals(other.getReStrValList())) return false;
      if (!internalGetMapVal().equals(
          other.internalGetMapVal())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOUBLE_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getDoubleVal()));
      hash = (37 * hash) + FLOAT_VAL_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getFloatVal());
      hash = (37 * hash) + INT32_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getInt32Val();
      hash = (37 * hash) + INT64_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInt64Val());
      hash = (37 * hash) + UINT32_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getUint32Val();
      hash = (37 * hash) + UINT64_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUint64Val());
      hash = (37 * hash) + SINT32_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getSint32Val();
      hash = (37 * hash) + SINT64_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSint64Val());
      hash = (37 * hash) + FIXED32_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getFixed32Val();
      hash = (37 * hash) + FIXED64_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFixed64Val());
      hash = (37 * hash) + SFIXED32_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getSfixed32Val();
      hash = (37 * hash) + SFIXED64_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSfixed64Val());
      hash = (37 * hash) + BOOL_VAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBoolVal());
      hash = (37 * hash) + STRING_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getStringVal().hashCode();
      hash = (37 * hash) + BYTES_VAL_FIELD_NUMBER;
      hash = (53 * hash) + getBytesVal().hashCode();
      hash = (37 * hash) + ENUM_VAL_FIELD_NUMBER;
      hash = (53 * hash) + enumVal_;
      if (getReStrValCount() > 0) {
        hash = (37 * hash) + RE_STR_VAL_FIELD_NUMBER;
        hash = (53 * hash) + getReStrValList().hashCode();
      }
      if (!internalGetMapVal().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_VAL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMapVal().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BaseData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BaseData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BaseData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BaseData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BaseData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BaseData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BaseData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BaseData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BaseData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BaseData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BaseData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BaseData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BaseData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BaseData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BaseData)
        BaseDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ProtobufProto.internal_static_BaseData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 18:
            return internalGetMapVal();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 18:
            return internalGetMutableMapVal();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ProtobufProto.internal_static_BaseData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BaseData.class, Builder.class);
      }

      // Construct using com.dtflys.test.converter.protobuf.ProtobufTestSerializer.BaseData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        doubleVal_ = 0D;

        floatVal_ = 0F;

        int32Val_ = 0;

        int64Val_ = 0L;

        uint32Val_ = 0;

        uint64Val_ = 0L;

        sint32Val_ = 0;

        sint64Val_ = 0L;

        fixed32Val_ = 0;

        fixed64Val_ = 0L;

        sfixed32Val_ = 0;

        sfixed64Val_ = 0L;

        boolVal_ = false;

        stringVal_ = "";

        bytesVal_ = com.google.protobuf.ByteString.EMPTY;

        enumVal_ = 0;

        reStrVal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableMapVal().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ProtobufProto.internal_static_BaseData_descriptor;
      }

      @Override
      public BaseData getDefaultInstanceForType() {
        return BaseData.getDefaultInstance();
      }

      @Override
      public BaseData build() {
        BaseData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BaseData buildPartial() {
        BaseData result = new BaseData(this);
        int from_bitField0_ = bitField0_;
        result.doubleVal_ = doubleVal_;
        result.floatVal_ = floatVal_;
        result.int32Val_ = int32Val_;
        result.int64Val_ = int64Val_;
        result.uint32Val_ = uint32Val_;
        result.uint64Val_ = uint64Val_;
        result.sint32Val_ = sint32Val_;
        result.sint64Val_ = sint64Val_;
        result.fixed32Val_ = fixed32Val_;
        result.fixed64Val_ = fixed64Val_;
        result.sfixed32Val_ = sfixed32Val_;
        result.sfixed64Val_ = sfixed64Val_;
        result.boolVal_ = boolVal_;
        result.stringVal_ = stringVal_;
        result.bytesVal_ = bytesVal_;
        result.enumVal_ = enumVal_;
        if (((bitField0_ & 0x00000001) != 0)) {
          reStrVal_ = reStrVal_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reStrVal_ = reStrVal_;
        result.mapVal_ = internalGetMapVal();
        result.mapVal_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BaseData) {
          return mergeFrom((BaseData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BaseData other) {
        if (other == BaseData.getDefaultInstance()) return this;
        if (other.getDoubleVal() != 0D) {
          setDoubleVal(other.getDoubleVal());
        }
        if (other.getFloatVal() != 0F) {
          setFloatVal(other.getFloatVal());
        }
        if (other.getInt32Val() != 0) {
          setInt32Val(other.getInt32Val());
        }
        if (other.getInt64Val() != 0L) {
          setInt64Val(other.getInt64Val());
        }
        if (other.getUint32Val() != 0) {
          setUint32Val(other.getUint32Val());
        }
        if (other.getUint64Val() != 0L) {
          setUint64Val(other.getUint64Val());
        }
        if (other.getSint32Val() != 0) {
          setSint32Val(other.getSint32Val());
        }
        if (other.getSint64Val() != 0L) {
          setSint64Val(other.getSint64Val());
        }
        if (other.getFixed32Val() != 0) {
          setFixed32Val(other.getFixed32Val());
        }
        if (other.getFixed64Val() != 0L) {
          setFixed64Val(other.getFixed64Val());
        }
        if (other.getSfixed32Val() != 0) {
          setSfixed32Val(other.getSfixed32Val());
        }
        if (other.getSfixed64Val() != 0L) {
          setSfixed64Val(other.getSfixed64Val());
        }
        if (other.getBoolVal() != false) {
          setBoolVal(other.getBoolVal());
        }
        if (!other.getStringVal().isEmpty()) {
          stringVal_ = other.stringVal_;
          onChanged();
        }
        if (other.getBytesVal() != com.google.protobuf.ByteString.EMPTY) {
          setBytesVal(other.getBytesVal());
        }
        if (other.enumVal_ != 0) {
          setEnumValValue(other.getEnumValValue());
        }
        if (!other.reStrVal_.isEmpty()) {
          if (reStrVal_.isEmpty()) {
            reStrVal_ = other.reStrVal_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReStrValIsMutable();
            reStrVal_.addAll(other.reStrVal_);
          }
          onChanged();
        }
        internalGetMutableMapVal().mergeFrom(
            other.internalGetMapVal());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BaseData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BaseData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double doubleVal_ ;
      /**
       * <code>double double_val = 1;</code>
       * @return The doubleVal.
       */
      @Override
      public double getDoubleVal() {
        return doubleVal_;
      }
      /**
       * <code>double double_val = 1;</code>
       * @param value The doubleVal to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleVal(double value) {
        
        doubleVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double_val = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleVal() {
        
        doubleVal_ = 0D;
        onChanged();
        return this;
      }

      private float floatVal_ ;
      /**
       * <code>float float_val = 2;</code>
       * @return The floatVal.
       */
      @Override
      public float getFloatVal() {
        return floatVal_;
      }
      /**
       * <code>float float_val = 2;</code>
       * @param value The floatVal to set.
       * @return This builder for chaining.
       */
      public Builder setFloatVal(float value) {
        
        floatVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float_val = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatVal() {
        
        floatVal_ = 0F;
        onChanged();
        return this;
      }

      private int int32Val_ ;
      /**
       * <code>int32 int32_val = 3;</code>
       * @return The int32Val.
       */
      @Override
      public int getInt32Val() {
        return int32Val_;
      }
      /**
       * <code>int32 int32_val = 3;</code>
       * @param value The int32Val to set.
       * @return This builder for chaining.
       */
      public Builder setInt32Val(int value) {
        
        int32Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32_val = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32Val() {
        
        int32Val_ = 0;
        onChanged();
        return this;
      }

      private long int64Val_ ;
      /**
       * <code>int64 int64_val = 4;</code>
       * @return The int64Val.
       */
      @Override
      public long getInt64Val() {
        return int64Val_;
      }
      /**
       * <code>int64 int64_val = 4;</code>
       * @param value The int64Val to set.
       * @return This builder for chaining.
       */
      public Builder setInt64Val(long value) {
        
        int64Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64_val = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64Val() {
        
        int64Val_ = 0L;
        onChanged();
        return this;
      }

      private int uint32Val_ ;
      /**
       * <code>uint32 uint32_val = 5;</code>
       * @return The uint32Val.
       */
      @Override
      public int getUint32Val() {
        return uint32Val_;
      }
      /**
       * <code>uint32 uint32_val = 5;</code>
       * @param value The uint32Val to set.
       * @return This builder for chaining.
       */
      public Builder setUint32Val(int value) {
        
        uint32Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uint32_val = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint32Val() {
        
        uint32Val_ = 0;
        onChanged();
        return this;
      }

      private long uint64Val_ ;
      /**
       * <code>uint64 uint64_val = 6;</code>
       * @return The uint64Val.
       */
      @Override
      public long getUint64Val() {
        return uint64Val_;
      }
      /**
       * <code>uint64 uint64_val = 6;</code>
       * @param value The uint64Val to set.
       * @return This builder for chaining.
       */
      public Builder setUint64Val(long value) {
        
        uint64Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 uint64_val = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearUint64Val() {
        
        uint64Val_ = 0L;
        onChanged();
        return this;
      }

      private int sint32Val_ ;
      /**
       * <code>sint32 sint32_val = 7;</code>
       * @return The sint32Val.
       */
      @Override
      public int getSint32Val() {
        return sint32Val_;
      }
      /**
       * <code>sint32 sint32_val = 7;</code>
       * @param value The sint32Val to set.
       * @return This builder for chaining.
       */
      public Builder setSint32Val(int value) {
        
        sint32Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sint32_val = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint32Val() {
        
        sint32Val_ = 0;
        onChanged();
        return this;
      }

      private long sint64Val_ ;
      /**
       * <code>sint64 sint64_val = 8;</code>
       * @return The sint64Val.
       */
      @Override
      public long getSint64Val() {
        return sint64Val_;
      }
      /**
       * <code>sint64 sint64_val = 8;</code>
       * @param value The sint64Val to set.
       * @return This builder for chaining.
       */
      public Builder setSint64Val(long value) {
        
        sint64Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint64 sint64_val = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSint64Val() {
        
        sint64Val_ = 0L;
        onChanged();
        return this;
      }

      private int fixed32Val_ ;
      /**
       * <code>fixed32 fixed32_val = 9;</code>
       * @return The fixed32Val.
       */
      @Override
      public int getFixed32Val() {
        return fixed32Val_;
      }
      /**
       * <code>fixed32 fixed32_val = 9;</code>
       * @param value The fixed32Val to set.
       * @return This builder for chaining.
       */
      public Builder setFixed32Val(int value) {
        
        fixed32Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed32 fixed32_val = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed32Val() {
        
        fixed32Val_ = 0;
        onChanged();
        return this;
      }

      private long fixed64Val_ ;
      /**
       * <code>fixed64 fixed64_val = 10;</code>
       * @return The fixed64Val.
       */
      @Override
      public long getFixed64Val() {
        return fixed64Val_;
      }
      /**
       * <code>fixed64 fixed64_val = 10;</code>
       * @param value The fixed64Val to set.
       * @return This builder for chaining.
       */
      public Builder setFixed64Val(long value) {
        
        fixed64Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>fixed64 fixed64_val = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFixed64Val() {
        
        fixed64Val_ = 0L;
        onChanged();
        return this;
      }

      private int sfixed32Val_ ;
      /**
       * <code>sfixed32 sfixed32_val = 11;</code>
       * @return The sfixed32Val.
       */
      @Override
      public int getSfixed32Val() {
        return sfixed32Val_;
      }
      /**
       * <code>sfixed32 sfixed32_val = 11;</code>
       * @param value The sfixed32Val to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed32Val(int value) {
        
        sfixed32Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 sfixed32_val = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed32Val() {
        
        sfixed32Val_ = 0;
        onChanged();
        return this;
      }

      private long sfixed64Val_ ;
      /**
       * <code>sfixed64 sfixed64_val = 12;</code>
       * @return The sfixed64Val.
       */
      @Override
      public long getSfixed64Val() {
        return sfixed64Val_;
      }
      /**
       * <code>sfixed64 sfixed64_val = 12;</code>
       * @param value The sfixed64Val to set.
       * @return This builder for chaining.
       */
      public Builder setSfixed64Val(long value) {
        
        sfixed64Val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed64 sfixed64_val = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSfixed64Val() {
        
        sfixed64Val_ = 0L;
        onChanged();
        return this;
      }

      private boolean boolVal_ ;
      /**
       * <code>bool bool_val = 13;</code>
       * @return The boolVal.
       */
      @Override
      public boolean getBoolVal() {
        return boolVal_;
      }
      /**
       * <code>bool bool_val = 13;</code>
       * @param value The boolVal to set.
       * @return This builder for chaining.
       */
      public Builder setBoolVal(boolean value) {
        
        boolVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_val = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolVal() {
        
        boolVal_ = false;
        onChanged();
        return this;
      }

      private Object stringVal_ = "";
      /**
       * <code>string string_val = 14;</code>
       * @return The stringVal.
       */
      public String getStringVal() {
        Object ref = stringVal_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          stringVal_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string string_val = 14;</code>
       * @return The bytes for stringVal.
       */
      public com.google.protobuf.ByteString
          getStringValBytes() {
        Object ref = stringVal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          stringVal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_val = 14;</code>
       * @param value The stringVal to set.
       * @return This builder for chaining.
       */
      public Builder setStringVal(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stringVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_val = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringVal() {
        
        stringVal_ = getDefaultInstance().getStringVal();
        onChanged();
        return this;
      }
      /**
       * <code>string string_val = 14;</code>
       * @param value The bytes for stringVal to set.
       * @return This builder for chaining.
       */
      public Builder setStringValBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stringVal_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bytesVal_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bytes_val = 15;</code>
       * @return The bytesVal.
       */
      @Override
      public com.google.protobuf.ByteString getBytesVal() {
        return bytesVal_;
      }
      /**
       * <code>bytes bytes_val = 15;</code>
       * @param value The bytesVal to set.
       * @return This builder for chaining.
       */
      public Builder setBytesVal(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bytesVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes_val = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytesVal() {
        
        bytesVal_ = getDefaultInstance().getBytesVal();
        onChanged();
        return this;
      }

      private int enumVal_ = 0;
      /**
       * <code>.Color enum_val = 16;</code>
       * @return The enum numeric value on the wire for enumVal.
       */
      @Override public int getEnumValValue() {
        return enumVal_;
      }
      /**
       * <code>.Color enum_val = 16;</code>
       * @param value The enum numeric value on the wire for enumVal to set.
       * @return This builder for chaining.
       */
      public Builder setEnumValValue(int value) {
        
        enumVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.Color enum_val = 16;</code>
       * @return The enumVal.
       */
      @Override
      public Color getEnumVal() {
        @SuppressWarnings("deprecation")
        Color result = Color.valueOf(enumVal_);
        return result == null ? Color.UNRECOGNIZED : result;
      }
      /**
       * <code>.Color enum_val = 16;</code>
       * @param value The enumVal to set.
       * @return This builder for chaining.
       */
      public Builder setEnumVal(Color value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        enumVal_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.Color enum_val = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnumVal() {
        
        enumVal_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList reStrVal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureReStrValIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          reStrVal_ = new com.google.protobuf.LazyStringArrayList(reStrVal_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @return A list containing the reStrVal.
       */
      public com.google.protobuf.ProtocolStringList
          getReStrValList() {
        return reStrVal_.getUnmodifiableView();
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @return The count of reStrVal.
       */
      public int getReStrValCount() {
        return reStrVal_.size();
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param index The index of the element to return.
       * @return The reStrVal at the given index.
       */
      public String getReStrVal(int index) {
        return reStrVal_.get(index);
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param index The index of the value to return.
       * @return The bytes of the reStrVal at the given index.
       */
      public com.google.protobuf.ByteString
          getReStrValBytes(int index) {
        return reStrVal_.getByteString(index);
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param index The index to set the value at.
       * @param value The reStrVal to set.
       * @return This builder for chaining.
       */
      public Builder setReStrVal(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReStrValIsMutable();
        reStrVal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param value The reStrVal to add.
       * @return This builder for chaining.
       */
      public Builder addReStrVal(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureReStrValIsMutable();
        reStrVal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param values The reStrVal to add.
       * @return This builder for chaining.
       */
      public Builder addAllReStrVal(
          Iterable<String> values) {
        ensureReStrValIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, reStrVal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearReStrVal() {
        reStrVal_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string re_str_val = 17;</code>
       * @param value The bytes of the reStrVal to add.
       * @return This builder for chaining.
       */
      public Builder addReStrValBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureReStrValIsMutable();
        reStrVal_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, BaseData> mapVal_;
      private com.google.protobuf.MapField<String, BaseData>
      internalGetMapVal() {
        if (mapVal_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapValDefaultEntryHolder.defaultEntry);
        }
        return mapVal_;
      }
      private com.google.protobuf.MapField<String, BaseData>
      internalGetMutableMapVal() {
        onChanged();;
        if (mapVal_ == null) {
          mapVal_ = com.google.protobuf.MapField.newMapField(
              MapValDefaultEntryHolder.defaultEntry);
        }
        if (!mapVal_.isMutable()) {
          mapVal_ = mapVal_.copy();
        }
        return mapVal_;
      }

      public int getMapValCount() {
        return internalGetMapVal().getMap().size();
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */

      @Override
      public boolean containsMapVal(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetMapVal().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapValMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<String, BaseData> getMapVal() {
        return getMapValMap();
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */
      @Override

      public java.util.Map<String, BaseData> getMapValMap() {
        return internalGetMapVal().getMap();
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */
      @Override

      public BaseData getMapValOrDefault(
          String key,
          BaseData defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, BaseData> map =
            internalGetMapVal().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */
      @Override

      public BaseData getMapValOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, BaseData> map =
            internalGetMapVal().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMapVal() {
        internalGetMutableMapVal().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */

      public Builder removeMapVal(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableMapVal().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, BaseData>
      getMutableMapVal() {
        return internalGetMutableMapVal().getMutableMap();
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */
      public Builder putMapVal(
          String key,
          BaseData value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableMapVal().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .BaseData&gt; map_val = 18;</code>
       */

      public Builder putAllMapVal(
          java.util.Map<String, BaseData> values) {
        internalGetMutableMapVal().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BaseData)
    }

    // @@protoc_insertion_point(class_scope:BaseData)
    private static final BaseData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BaseData();
    }

    public static BaseData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BaseData>
        PARSER = new com.google.protobuf.AbstractParser<BaseData>() {
      @Override
      public BaseData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BaseData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BaseData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BaseData> getParserForType() {
      return PARSER;
    }

    @Override
    public BaseData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BaseData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BaseData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BaseData_MapValEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BaseData_MapValEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022ProtobufTest.proto\"\306\003\n\010BaseData\022\022\n\ndou" +
      "ble_val\030\001 \001(\001\022\021\n\tfloat_val\030\002 \001(\002\022\021\n\tint3" +
      "2_val\030\003 \001(\005\022\021\n\tint64_val\030\004 \001(\003\022\022\n\nuint32" +
      "_val\030\005 \001(\r\022\022\n\nuint64_val\030\006 \001(\004\022\022\n\nsint32" +
      "_val\030\007 \001(\021\022\022\n\nsint64_val\030\010 \001(\022\022\023\n\013fixed3" +
      "2_val\030\t \001(\007\022\023\n\013fixed64_val\030\n \001(\006\022\024\n\014sfix" +
      "ed32_val\030\013 \001(\017\022\024\n\014sfixed64_val\030\014 \001(\020\022\020\n\010" +
      "bool_val\030\r \001(\010\022\022\n\nstring_val\030\016 \001(\t\022\021\n\tby" +
      "tes_val\030\017 \001(\014\022\030\n\010enum_val\030\020 \001(\0162\006.Color\022" +
      "\022\n\nre_str_val\030\021 \003(\t\022&\n\007map_val\030\022 \003(\0132\025.B" +
      "aseData.MapValEntry\0328\n\013MapValEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\030\n\005value\030\002 \001(\0132\t.BaseData:\0028\001*/\n" +
      "\005Color\022\010\n\004NONE\020\000\022\007\n\003RED\020\001\022\t\n\005GREEN\020\002\022\010\n\004" +
      "BLUE\020\003B<\n\"com.dtflys.test.converter.prot" +
      "obufB\026ProtobufTestSerializerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_BaseData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BaseData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BaseData_descriptor,
        new String[] { "DoubleVal", "FloatVal", "Int32Val", "Int64Val", "Uint32Val", "Uint64Val", "Sint32Val", "Sint64Val", "Fixed32Val", "Fixed64Val", "Sfixed32Val", "Sfixed64Val", "BoolVal", "StringVal", "BytesVal", "EnumVal", "ReStrVal", "MapVal", });
    internal_static_BaseData_MapValEntry_descriptor =
      internal_static_BaseData_descriptor.getNestedTypes().get(0);
    internal_static_BaseData_MapValEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BaseData_MapValEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
